{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["BlogIndex","data","location","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","map","node","frontmatter","fields","slug","key","className","css","to","style","display","date","pageQuery"],"mappings":"2FAAA,2H,sFA2CeA,UAlCG,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACnBC,EAAYF,EAAKG,KAAKC,aAAaC,MACnCC,EAAQN,EAAKO,kBAAkBC,MAErC,OACE,YAAC,IAAD,CAAQP,SAAUA,EAAUI,MAAOH,GACjC,YAAC,IAAD,CAAKG,MAAM,SACVC,EAAMG,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNL,EAAQK,EAAKC,YAAYN,OAASK,EAAKE,OAAOC,KACpD,OACE,uBACEC,IAAKJ,EAAKE,OAAOC,KACjBE,UAAU,aAEV,YAAC,OAAD,CACEC,IAAG,EAGHC,GAAIP,EAAKE,OAAOC,MAEhB,sBAAKR,GACL,qBAAOa,MAAO,CACZC,QAAQ,UAEPT,EAAKC,YAAYS,aAY3B,IAAMC,EAAS","file":"component---src-pages-index-js-d367c3cc3937d8124637.js","sourcesContent":["import React, { useState } from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { css, jsx } from '@emotion/core';\nimport tw, { styled } from \"twin.macro\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n  const posts = data.allMarkdownRemark.edges\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"Home\" />\n      {posts.map(({ node }) => {\n        const title = node.frontmatter.title || node.fields.slug\n        return (\n          <article \n            key={node.fields.slug}\n            className=\"blog-post\"\n          >\n            <Link \n              css={css`\n                ${tw`py-3 block`}\n              `}\n              to={node.fields.slug}\n            >\n              <h3>{title}</h3>\n              <small style={{\n                display: `block`\n              }}>\n                {node.frontmatter.date}\n              </small>\n            </Link>\n          </article>\n        )\n      })}\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}